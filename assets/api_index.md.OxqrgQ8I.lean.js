import{_ as e,c as a,a2 as s,o as i}from"./chunks/framework.CdbxnhrM.js";const k=JSON.parse('{"title":"Coding Reference","description":"","frontmatter":{},"headers":[],"relativePath":"api/index.md","filePath":"api/index.md","lastUpdated":1730382198000}'),r={name:"api/index.md"};function n(d,t,o,l,h,p){return i(),a("div",null,t[0]||(t[0]=[s(`<h1 id="coding-reference" tabindex="-1">Coding Reference <a class="header-anchor" href="#coding-reference" aria-label="Permalink to &quot;Coding Reference&quot;">​</a></h1><h2 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-label="Permalink to &quot;Props&quot;">​</a></h2><p>Some basic props are defined in the components provided by <code>vue-chartjs</code>.</p><table tabindex="0"><thead><tr><th>Prop</th><th>Description</th></tr></thead><tbody><tr><td>data</td><td>Data object that is passed into the Chart.js chart</td></tr><tr><td>options</td><td>Options object that is passed into the Chart.js chart</td></tr><tr><td>datasetIdKey</td><td>Key name to identify the dataset</td></tr><tr><td>plugins</td><td>Plugins array that is passed into the Chart.js chart</td></tr><tr><td>updateMode</td><td>Mode string to indicate the transition configuration to be used.</td></tr><tr><td>ariaLabel</td><td>An <a href="https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label" target="_blank" rel="noreferrer">ARIA label</a> that describes the chart to make it accessible.</td></tr><tr><td>ariaDescribedby</td><td>A reference to the <a href="https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-describedby" target="_blank" rel="noreferrer">describing element</a>. E. g. a table representation of the data.</td></tr></tbody></table><p>The rest of the props will fall through to the canvas element.</p><h2 id="global-methods" tabindex="-1">Global Methods <a class="header-anchor" href="#global-methods" aria-label="Permalink to &quot;Global Methods&quot;">​</a></h2><p>Global Methods need to be imported.</p><h3 id="createtypedchart" tabindex="-1">createTypedChart <a class="header-anchor" href="#createtypedchart" aria-label="Permalink to &quot;createTypedChart&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>Function</code></li><li><strong>Arguments</strong>:<code>chart-type</code>, <code>chart-controller</code></li><li><strong>Usage:</strong></li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { createTypedChart } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vue-chartjs&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { LineController } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;chart.js&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> CustomLine</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> createTypedChart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;line&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, LineController)</span></span></code></pre></div>`,10)]))}const b=e(r,[["render",n]]);export{k as __pageData,b as default};
